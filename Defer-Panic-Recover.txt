What are defer, panic and recover? How do you recover from a run-time panic?

::Defer::
A defer statement pushes a function call onto a list. 
Defer means to defer or hold on to function call execution till the end of the function from which it is called.

package main
import "fmt"

func first()	{
...
}

func second()	{
...
}

func main()		{
	defer first()
	second()
}

This will run the second() function first and then first().

::Panic::
Panic usuall indicates an error like index out of bound, forgetting to initialize a map. It stops the normal
execution flow and executes any defer functions.

::Recover::
It regains the control of panicking routine. It should be used inside the defer function only, since panic
will stop the regular flow of execution.

package main
import "fmt"

func first()	{
str:=recover()
fmt.Print(str)
}

func second()	{
...
}
func third()	{
...
}

func main()		{
	defer first()
	second()
	panic('PANIC')
	third()
}